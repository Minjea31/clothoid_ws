#!/usr/bin/env python
PACKAGE = "Object_detect"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("PITCH_DEG", double_t, 0, "센서 pitch(deg)", 3.3, -10, 10)
gen.add("ROI_X_MIN", double_t, 0, "ROI_X_MIN", 0, -30, 30)
gen.add("ROI_X_MAX", double_t, 0, "ROI_X_MAX", 15, -30, 30)
gen.add("ROI_Y_MIN", double_t, 0, "ROI_Y_MIN", -1.8, -10, 10)
gen.add("ROI_Y_MAX", double_t, 0, "ROI_Y_MAX", 1.8, -10, 10)
gen.add("ROI_Z_MIN", double_t, 0, "ROI_Z_MIN", -2, -10, 10)
gen.add("ROI_Z_MAX", double_t, 0, "ROI_Z_MAX", 2, -10, 10)
gen.add("VOXEL_SIZE", double_t, 0, "Voxel Size", 0.1, 0.01, 0.5)
gen.add("DROR_MIN_NEIGHBORS", int_t, 0, "DROR min neighbors", 2, 1, 10)
gen.add("DROR_MIN_RADIUS", double_t, 0, "DROR min radius", 0.2, 0.01, 1)
gen.add("DROR_RADIUS_SCALE", double_t, 0, "DROR radius scale", 0.4, 0.01, 1)
gen.add("DROR_MAX_RADIUS", double_t, 0, "DROR max radius", 0.3, 0.01, 1)
gen.add("GROUND_THRESH", double_t, 0, "Ground threshold", 0.25, 0.01, 1)
gen.add("EUCLIDEAN_CLUSTER_DIST", double_t, 0, "클러스터링 거리", 0.1, 0.01, 0.5)
gen.add("EUCLIDEAN_MIN_CLUSTER_SIZE", int_t, 0, "최소 클러스터 크기", 4, 1, 20)
gen.add("CLUSTER_MERGE_GAP", double_t, 0, "클러스터 병합 gap", 0.05, 0.01, 0.5)
gen.add("MAX_LENGTH", double_t, 0, "최대 길이", 2.0, 0.1, 10)
gen.add("MAX_WIDTH", double_t, 0, "최대 폭", 2.0, 0.1, 10)
gen.add("MAX_HEIGHT", double_t, 0, "최대 높이", 1.5, 0.1, 10)
gen.add("MIN_LENGTH", double_t, 0, "최소 길이", 0.1, 0.01, 2)
gen.add("MIN_WIDTH", double_t, 0, "최소 폭", 0.1, 0.01, 2)
gen.add("MIN_HEIGHT", double_t, 0, "최소 높이", 0.1, 0.01, 2)
gen.add("TRACKER_MAX_MISS", int_t, 0, "트래커 최대 miss", 2, 0, 10)
gen.add("MATCH_DIST", double_t, 0, "트래커 매칭 거리", 1.5, 0.1, 10)
gen.add("EUCLIDEAN_BASE_DIST", double_t, 0, "기본 클러스터 거리", 0.08, 0.01, 0.3)
gen.add("EUCLIDEAN_DIST_SCALE", double_t, 0, "거리 증가당 threshold", 0.012, 0.001, 0.05)

exit(gen.generate(PACKAGE, "lidar_clustering", "LidarClustering"))

